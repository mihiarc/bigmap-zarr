version: '3.8'

services:
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/notebooks
      - ./data:/data
      - ./src:/src
    environment:
      - JUPYTER_ENABLE_LAB=yes
    depends_on:
      - postgis
    networks:
      - heirs_network

  postgis:
    image: postgis/postgis:15-3.3
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_INITDB_ARGS=--data-checksums
    command: ["postgres", "-c", "logging_collector=on", "-c", "log_directory=/var/log/postgresql", "-c", "log_filename=postgresql-%Y-%m-%d_%H%M%S.log", "-c", "log_statement=all"]
    volumes:
      - postgis_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
      - ./logs/postgis:/var/log/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - heirs_network

  processing:
    build:
      context: .
      dockerfile: Dockerfile.processing
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    environment:
      - DB_HOST=postgis
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      postgis:
        condition: service_healthy
    networks:
      - heirs_network

volumes:
  postgis_data:
    driver: local

networks:
  heirs_network:
    driver: bridge 