name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgis:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_DB: heirs_property
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gdal-bin libgdal-dev

    - name: Install Rye
      run: |
        curl -sSf https://rye-up.com/get | bash
        echo "$HOME/.rye/shims" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        rye sync
        pip install pre-commit

    - name: Create directories
      run: |
        mkdir -p data/{raw,processed,interim}
        mkdir -p logs/postgis
        mkdir -p backup/postgres

    - name: Create .env file
      run: |
        cp .env.template .env
        echo "DB_PASSWORD=postgres" >> .env

    - name: Run pre-commit checks
      run: pre-commit run --all-files

    - name: Run tests
      run: |
        pytest tests/ -v --cov=src --cov-report=xml
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: heirs_property
        DB_USER: postgres
        DB_PASSWORD: postgres

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff mypy

    - name: Run Ruff
      run: ruff check .

    - name: Run MyPy
      run: mypy src

  docker:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and test Docker images
      run: |
        docker-compose build
        docker-compose up -d
        sleep 10
        docker-compose ps
        docker-compose logs
        docker-compose exec -T postgis pg_isready -U postgres
        docker-compose down 